#!/usr/bin/env python

import sys
from pandocfilters import toJSONFilter, Header, Null, Image, Para
import xml.etree.ElementTree as ET
import re
import os
import PIL.Image

def uphead(key, value, format, meta):
  if key == 'Header':
    if value[0] >= 2:
        return Header(value[0] - 1, *value[1:])
    else:
        return Null()

  if key == 'Image': print(value, file=sys.stderr)
  if key == 'RawInline' and value[0] == 'html' and 'img' in value[1]:
    html = ET.fromstring(value[1])
    # print(value, file=sys.stderr)
    if html.tag == 'img':
        style_match = re.search(r'zoom:(.*)%', html.attrib.get('style', ''))
        scale = (float(style_match.group(1)) if style_match else 30) / 100 * 0.8
        image_path = os.path.join(os.getenv('PANDOC_PREFIX'), html.attrib.get('src', ''))
        size = (96, 96)
        if os.path.exists(image_path):
            image = PIL.Image.open(image_path)
            size = image.size
        size = (int(size[0] * scale), int(size[1] * scale))

        # print(size, file=sys.stderr)
        return Image(
            ['', [], [['width', f'{size[0]}px'], ['height', f'{size[1]}px']]],
            [{'t': 'Str', 'c': html.attrib.get('alt', '')}],
            [image_path, 'fig:']
        )

if __name__ == "__main__":
  toJSONFilter(uphead)
